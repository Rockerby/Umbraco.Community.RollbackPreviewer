{"version":3,"file":"rollback.element-BCDzov1Q.js","sources":["../../../Client/src/modals/rollback.element.ts"],"sourcesContent":["import { UMB_DOCUMENT_ENTITY_TYPE } from '@umbraco-cms/backoffice/document';\r\nimport { UmbRollbackRepository } from '../repository/rollback.repository.js';\r\nimport { UmbDocumentDetailRepository } from '@umbraco-cms/backoffice/document';\r\nimport type { UmbDocumentDetailModel } from '@umbraco-cms/backoffice/document';\r\nimport type { UmbRollbackModalData, UmbRollbackModalValue } from './types';\r\nimport { diffWords, type Change } from '@umbraco-cms/backoffice/external/diff';\r\nimport { css, customElement, html, nothing, repeat, state, unsafeHTML } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbUserItemRepository } from '@umbraco-cms/backoffice/user';\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport type { UUISelectEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UMB_APP_LANGUAGE_CONTEXT, UmbLanguageItemRepository } from '@umbraco-cms/backoffice/language';\r\nimport { UMB_ENTITY_CONTEXT } from '@umbraco-cms/backoffice/entity';\r\nimport { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\n\r\n//import '../../modals/shared/document-variant-language-picker.element.js';\r\nimport { UMB_ACTION_EVENT_CONTEXT } from '@umbraco-cms/backoffice/action';\r\nimport { UmbEntityUpdatedEvent, UmbRequestReloadStructureForEntityEvent } from '@umbraco-cms/backoffice/entity-action';\r\n\r\ntype DocumentVersion = {\r\n  id: string;\r\n  date: string;\r\n  user: string;\r\n  isCurrentlyPublishedVersion: boolean;\r\n  preventCleanup: boolean;\r\n};\r\n\r\n@customElement('pr-rollback-modal')\r\nexport class RbpRollbackModalElement extends UmbModalBaseElement<UmbRollbackModalData, UmbRollbackModalValue> {\r\n  @state()\r\n  _versions: DocumentVersion[] = [];\r\n\r\n  @state()\r\n  _selectedVersion?: {\r\n    date: string;\r\n    name: string;\r\n    user: string;\r\n    id: string;\r\n    properties: {\r\n      alias: string;\r\n      value: string;\r\n    }[];\r\n  };\r\n\r\n  @state()\r\n  _selectedCulture: string | null = null;\r\n\r\n  @state()\r\n  _isInvariant = true;\r\n\r\n  @state()\r\n  _availableVariants: Option[] = [];\r\n\r\n  @state()\r\n  _diffs: Array<{ alias: string; diff: Change[] }> = [];\r\n\r\n  #rollbackRepository = new UmbRollbackRepository(this);\r\n  #userItemRepository = new UmbUserItemRepository(this);\r\n\r\n  #localizeDateOptions: Intl.DateTimeFormatOptions = {\r\n    day: 'numeric',\r\n    month: 'long',\r\n    hour: 'numeric',\r\n    minute: '2-digit',\r\n  };\r\n\r\n  #currentDocument: UmbDocumentDetailModel | undefined;\r\n  #currentAppCulture: string | undefined;\r\n  #currentDatasetCulture: string | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, (instance) => {\r\n      this.#currentDatasetCulture = instance.getVariantId().culture ?? undefined;\r\n      this.#selectCulture();\r\n    });\r\n\r\n    this.consumeContext(UMB_APP_LANGUAGE_CONTEXT, (instance) => {\r\n      this.#currentAppCulture = instance.getAppCulture();\r\n      this.#selectCulture();\r\n    });\r\n\r\n    this.consumeContext(UMB_ENTITY_CONTEXT, async (instance) => {\r\n      if (instance.getEntityType() !== UMB_DOCUMENT_ENTITY_TYPE) {\r\n        throw new Error(`Entity type is not ${UMB_DOCUMENT_ENTITY_TYPE}`);\r\n      }\r\n\r\n      const unique = instance?.getUnique();\r\n\r\n      if (!unique) {\r\n        throw new Error('Document unique is not set');\r\n      }\r\n\r\n      const { data } = await new UmbDocumentDetailRepository(this).requestByUnique(unique);\r\n      if (!data) return;\r\n\r\n      this.#currentDocument = data;\r\n      const itemVariants = this.#currentDocument?.variants ?? [];\r\n\r\n      this._isInvariant = itemVariants.length === 1 && new UmbVariantId(itemVariants[0].culture).isInvariant();\r\n      this.#selectCulture();\r\n\r\n      const cultures = itemVariants.map((x) => x.culture).filter((x) => x !== null) as string[];\r\n      const { data: languageItems } = await new UmbLanguageItemRepository(this).requestItems(cultures);\r\n\r\n      if (languageItems) {\r\n        this._availableVariants = languageItems.map((language) => {\r\n          return {\r\n            name: language.name,\r\n            value: language.unique,\r\n            selected: language.unique === this._selectedCulture,\r\n          };\r\n        });\r\n      } else {\r\n        this._availableVariants = [];\r\n      }\r\n\r\n      this.#requestVersions();\r\n    });\r\n  }\r\n\r\n  #selectCulture() {\r\n    const contextCulture = this.#currentDatasetCulture ?? this.#currentAppCulture ?? null;\r\n    this._selectedCulture = this._isInvariant ? null : contextCulture;\r\n  }\r\n\r\n  async #requestVersions() {\r\n    if (!this.#currentDocument?.unique) {\r\n      throw new Error('Document unique is not set');\r\n    }\r\n\r\n    const { data } = await this.#rollbackRepository.requestVersionsByDocumentId(\r\n      this.#currentDocument?.unique,\r\n      this._selectedCulture ?? undefined,\r\n    );\r\n    if (!data) return;\r\n\r\n    const tempItems: DocumentVersion[] = [];\r\n\r\n    const uniqueUserIds = [...new Set(data?.items.map((item) => item.user.id))];\r\n\r\n    const { data: userItems } = await this.#userItemRepository.requestItems(uniqueUserIds);\r\n\r\n    data?.items.forEach((item: any) => {\r\n      if (item.isCurrentDraftVersion) return;\r\n\r\n      tempItems.push({\r\n        date: item.versionDate,\r\n        user:\r\n          userItems?.find((user) => user.unique === item.user.id)?.name || this.localize.term('general_unknownUser'),\r\n        isCurrentlyPublishedVersion: item.isCurrentPublishedVersion,\r\n        id: item.id,\r\n        preventCleanup: item.preventCleanup,\r\n      });\r\n    });\r\n\r\n    this._versions = tempItems;\r\n    const id = tempItems.find((item) => item.isCurrentlyPublishedVersion)?.id;\r\n\r\n    if (id) {\r\n      this.#selectVersion(id);\r\n    }\r\n  }\r\n\r\n  async #selectVersion(id: string) {\r\n    const version = this._versions.find((item) => item.id === id);\r\n\r\n    if (!version) {\r\n      this._selectedVersion = undefined;\r\n      this._diffs = [];\r\n      return;\r\n    }\r\n\r\n    const { data } = await this.#rollbackRepository.requestVersionById(id);\r\n\r\n    if (!data) {\r\n      this._selectedVersion = undefined;\r\n      this._diffs = [];\r\n      return;\r\n    }\r\n\r\n    this._selectedVersion = {\r\n      date: version.date,\r\n      user: version.user,\r\n      name: data.variants.find((x) => x.culture === this._selectedCulture)?.name || data.variants[0].name,\r\n      id: data.id,\r\n      properties: data.values\r\n        .filter((x) => x.culture === this._selectedCulture || !x.culture) // When invariant, culture is undefined or null.\r\n        .map((value: any) => {\r\n          return {\r\n            alias: value.alias,\r\n            value: value.value,\r\n          };\r\n        }),\r\n    };\r\n\r\n    await this.#setDiffs();\r\n  }\r\n\r\n  async #onRollback() {\r\n    if (!this._selectedVersion) return;\r\n\r\n    const id = this._selectedVersion.id;\r\n    const culture = this._selectedCulture ?? undefined;\r\n\r\n    const { error } = await this.#rollbackRepository.rollback(id, culture);\r\n    if (error) return;\r\n\r\n    const unique = this.#currentDocument?.unique;\r\n    const entityType = this.#currentDocument?.entityType;\r\n\r\n    if (!unique || !entityType) {\r\n      throw new Error('Document unique or entity type is not set');\r\n    }\r\n\r\n    const actionEventContext = await this.getContext(UMB_ACTION_EVENT_CONTEXT);\r\n\r\n    const reloadStructureEvent = new UmbRequestReloadStructureForEntityEvent({ unique, entityType });\r\n    actionEventContext.dispatchEvent(reloadStructureEvent);\r\n\r\n    const entityUpdatedEvent = new UmbEntityUpdatedEvent({ unique, entityType });\r\n    actionEventContext.dispatchEvent(entityUpdatedEvent);\r\n\r\n    this.modalContext?.submit();\r\n  }\r\n\r\n  #onCancel() {\r\n    this.modalContext?.reject();\r\n  }\r\n\r\n  #onVersionClicked(id: string) {\r\n    this.#selectVersion(id);\r\n  }\r\n\r\n  #onPreventCleanup(event: Event, id: string, preventCleanup: boolean) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.#rollbackRepository.setPreventCleanup(id, preventCleanup);\r\n\r\n    const version = this._versions.find((item) => item.id === id);\r\n    if (!version) return;\r\n\r\n    version.preventCleanup = preventCleanup;\r\n    this.requestUpdate('versions');\r\n  }\r\n\r\n  #onChangeCulture(event: UUISelectEvent) {\r\n    const value = event.target.value;\r\n\r\n    this._selectedCulture = value.toString();\r\n    this.#requestVersions();\r\n  }\r\n\r\n  #trimQuotes(str: string): string {\r\n    return str.replace(/^['\"]|['\"]$/g, '');\r\n  }\r\n\r\n  #renderCultureSelect() {\r\n    return html`\r\n\t\t\t<uui-select\r\n\t\t\t\tid=\"language-select\"\r\n\t\t\t\t@change=${this.#onChangeCulture}\r\n\t\t\t\t.options=${this._availableVariants}></uui-select>\r\n\t\t`;\r\n  }\r\n\r\n  #renderVersions() {\r\n    if (!this._versions.length) {\r\n      return html`<uui-box headline=${this.localize.term('rollback_versions')}>No versions available</uui-box>`;\r\n    }\r\n\r\n    return html` <uui-box id=\"versions-box\" headline=${this.localize.term('rollback_versions')}>\r\n\t\t\t${repeat(\r\n      this._versions,\r\n      (item) => item.id,\r\n      (item) => {\r\n        return html`\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t@click=${() => this.#onVersionClicked(item.id)}\r\n\t\t\t\t\t\t\t@keydown=${() => { }}\r\n\t\t\t\t\t\t\tclass=\"rollback-item ${this._selectedVersion?.id === item.id ? 'active' : ''}\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p class=\"rollback-item-date\">\r\n\t\t\t\t\t\t\t\t\t<umb-localize-date date=\"${item.date}\" .options=${this.#localizeDateOptions}></umb-localize-date>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>${item.user}</p>\r\n\t\t\t\t\t\t\t\t<p>${item.isCurrentlyPublishedVersion ? this.localize.term('rollback_currentPublishedVersion') : ''}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\t\t\t@click=${(event: Event) => this.#onPreventCleanup(event, item.id, !item.preventCleanup)}\r\n\t\t\t\t\t\t\t\tlabel=${item.preventCleanup\r\n            ? this.localize.term('contentTypeEditor_historyCleanupEnableCleanup')\r\n            : this.localize.term('contentTypeEditor_historyCleanupPreventCleanup')}></uui-button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t`;\r\n      },\r\n    )}</uui-box\r\n\t\t>`;\r\n  }\r\n\r\n  async #setDiffs() {\r\n    if (!this._selectedVersion) return;\r\n\r\n    const currentPropertyValues = this.#currentDocument?.values.filter(\r\n      (x) => x.culture === this._selectedCulture || !x.culture,\r\n    ); // When invariant, culture is undefined or null.\r\n\r\n    if (!currentPropertyValues) {\r\n      throw new Error('Current property values are not set');\r\n    }\r\n\r\n    const currentName = this.#currentDocument?.variants.find((x) => x.culture === this._selectedCulture)?.name;\r\n\r\n    if (!currentName) {\r\n      throw new Error('Current name is not set');\r\n    }\r\n\r\n    const diffs: Array<{ alias: string; diff: Change[] }> = [];\r\n\r\n    const nameDiff = diffWords(currentName, this._selectedVersion.name);\r\n    diffs.push({ alias: 'name', diff: nameDiff });\r\n\r\n    this._selectedVersion.properties.forEach((item) => {\r\n      const draftValue = currentPropertyValues.find((x) => x.alias === item.alias);\r\n\r\n      if (!draftValue) return;\r\n\r\n      const draftValueString = this.#trimQuotes(JSON.stringify(draftValue.value));\r\n      const versionValueString = this.#trimQuotes(JSON.stringify(item.value));\r\n\r\n      const diff = diffWords(draftValueString, versionValueString);\r\n      diffs.push({ alias: item.alias, diff });\r\n    });\r\n\r\n    this._diffs = [...diffs];\r\n  }\r\n\r\n  #renderSelectedVersion() {\r\n    if (!this._selectedVersion)\r\n      return html`\r\n\t\t\t\t<uui-box id=\"box-right\" style=\"display: flex; align-items: center; justify-content: center;\"\r\n\t\t\t\t\t>No selected version</uui-box\r\n\t\t\t\t>\r\n\t\t\t`;\r\n\r\n    return html`\r\n\t\t\t<uui-box headline=${this.currentVersionHeader} id=\"box-right\">\r\n\t\t\t\t${unsafeHTML(this.localize.term('rollback_diffHelp'))}\r\n\t\t\t\t<uui-table>\r\n\t\t\t\t\t<uui-table-column style=\"width: 0\"></uui-table-column>\r\n\t\t\t\t\t<uui-table-column></uui-table-column>\r\n\r\n\t\t\t\t\t<uui-table-head>\r\n\t\t\t\t\t\t<uui-table-head-cell>${this.localize.term('general_alias')}</uui-table-head-cell>\r\n\t\t\t\t\t\t<uui-table-head-cell>${this.localize.term('general_value')}</uui-table-head-cell>\r\n\t\t\t\t\t</uui-table-head>\r\n\t\t\t\t\t${repeat(\r\n      this._diffs,\r\n      (item) => item.alias,\r\n      (item) => {\r\n        const diff = this._diffs.find((x) => x?.alias === item.alias);\r\n        return html`\r\n\t\t\t\t\t\t\t\t<uui-table-row>\r\n\t\t\t\t\t\t\t\t\t<uui-table-cell>${item.alias}</uui-table-cell>\r\n\t\t\t\t\t\t\t\t\t<uui-table-cell>\r\n\t\t\t\t\t\t\t\t\t\t${diff\r\n            ? diff.diff.map((part) =>\r\n              part.added\r\n                ? html`<span class=\"diff-added\">${part.value}</span>`\r\n                : part.removed\r\n                  ? html`<span class=\"diff-removed\">${part.value}</span>`\r\n                  : part.value,\r\n            )\r\n            : nothing}\r\n\t\t\t\t\t\t\t\t\t</uui-table-cell>\r\n\t\t\t\t\t\t\t\t</uui-table-row>\r\n\t\t\t\t\t\t\t`;\r\n      },\r\n    )}\r\n\t\t\t\t</uui-table>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n  }\r\n\r\n\r\n\r\n  #renderSelectedVersionVisualPreview() {\r\n    console.log(\"vers\", this._selectedVersion);\r\n    console.log(\"doc\", this.#currentDocument);\r\n\r\n    if (!this._selectedVersion)\r\n      return html`\r\n\t\t\t\t<uui-box id=\"box-right\" style=\"display: flex; align-items: center; justify-content: center;\"\r\n\t\t\t\t\t>No selected version</uui-box\r\n\t\t\t\t>\r\n\t\t\t`;\r\n\r\n    return html`\r\n\t\t\t<uui-box headline=${this.currentVersionHeader} id=\"box-right\">\r\n\t\t\t\t<div>\r\n          ${unsafeHTML(this.localize.term('rollback_diffHelp'))}\r\n        </div>\r\n        <div class=\"rollback-preview-wrapper\">\r\n          <div>\r\n            <h3>Current version</h3>\r\n            <div class=\"iframe-wrapper\">\r\n  \t\t\t\t    <iframe src=\"https://localhost:44355/?cid=${this.#currentDocument?.unique}\"></iframe>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3>Selected version</h3>\r\n            <div class=\"iframe-wrapper\">\r\n    \t\t\t\t  <iframe src=\"https://localhost:44355/?cid=${this.#currentDocument?.unique}&vid=${this._selectedVersion.id}\"></iframe>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n  }\r\n\r\n  get currentVersionHeader() {\r\n    return (\r\n      this.localize.date(this._selectedVersion?.date ?? new Date(), this.#localizeDateOptions) +\r\n      ' - ' +\r\n      this._selectedVersion?.user\r\n    );\r\n  }\r\n\r\n  override render() {\r\n    return html`\r\n\t\t\t<umb-body-layout headline=\"Visual Rollback Preview\">\r\n\t\t\t\t<div id=\"main\">\r\n\t\t\t\t\t<div id=\"box-left\">\r\n\t\t\t\t\t\t${this._availableVariants.length\r\n        ? html`\r\n\t\t\t\t\t\t\t\t\t<uui-box id=\"language-box\" headline=${this.localize.term('general_language')}>\r\n\t\t\t\t\t\t\t\t\t\t${this.#renderCultureSelect()}\r\n\t\t\t\t\t\t\t\t\t</uui-box>\r\n\t\t\t\t\t\t\t\t`\r\n        : nothing}\r\n\t\t\t\t\t\t${this.#renderVersions()}\r\n\t\t\t\t\t${this.#renderSelectedVersionVisualPreview()}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<umb-footer-layout slot=\"footer\">\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\t@click=${this.#onCancel}\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_cancel')}></uui-button>\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\t@click=${this.#onRollback}\r\n\t\t\t\t\t\tlabel=${this.localize.term('actions_rollback')}\r\n\t\t\t\t\t\t?disabled=${!this._selectedVersion}></uui-button>\r\n\t\t\t\t</umb-footer-layout>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n  }\r\n\r\n  static override styles = [\r\n    UmbTextStyles,\r\n    css`\r\n\t\t\t:host {\r\n\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t}\r\n\r\n\t\t\t#language-box {\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-2);\r\n\t\t\t}\r\n\r\n\t\t\t#language-select {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t.diff-added,\r\n\t\t\tins {\r\n\t\t\t\tbackground-color: #00c43e63;\r\n\t\t\t}\r\n\t\t\t.diff-removed,\r\n\t\t\tdel {\r\n\t\t\t\tbackground-color: #ff35356a;\r\n\t\t\t}\r\n\t\t\t.rollback-item {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: var(--uui-size-space-5);\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t\t.rollback-item::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tinset: 2px;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tborder: 2px solid transparent;\r\n\t\t\t\tpointer-events: none;\r\n\t\t\t}\r\n\t\t\t.rollback-item.active::after,\r\n\t\t\t.rollback-item:hover::after {\r\n\t\t\t\tborder-color: var(--uui-color-selected);\r\n\t\t\t}\r\n\t\t\t.rollback-item:not(.active):hover::after {\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\t\t\t.rollback-item p {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\t\t\tp.rollback-item-date {\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\t\t\t.rollback-item uui-button {\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t}\r\n\r\n\t\t\t#main {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-5);\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#versions-box {\r\n\t\t\t\t--uui-box-default-padding: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#box-left {\r\n\t\t\t\tflex: 1;\r\n\t\t\t\toverflow: auto;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\r\n      .rollback-preview-wrapper {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: var(--uui-size-space-5);\r\n      }\r\n      .rollback-preview-wrapper .iframe-wrapper {\r\n      }\r\n      .rollback-preview-wrapper .iframe-wrapper iframe {\r\n        width:100%;\r\n        height:600px;\r\n        border: none;\r\n      }\r\n\r\n\t\t`,\r\n  ];\r\n}\r\n\r\nexport default RbpRollbackModalElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'pr-rollback-modal': RbpRollbackModalElement;\r\n  }\r\n}\r\n"],"names":["_rollbackRepository","_userItemRepository","_localizeDateOptions","_currentDocument","_currentAppCulture","_currentDatasetCulture","_RbpRollbackModalElement_instances","selectCulture_fn","requestVersions_fn","selectVersion_fn","onRollback_fn","onCancel_fn","onVersionClicked_fn","onPreventCleanup_fn","onChangeCulture_fn","trimQuotes_fn","renderCultureSelect_fn","renderVersions_fn","setDiffs_fn","renderSelectedVersionVisualPreview_fn","RbpRollbackModalElement","UmbModalBaseElement","__privateAdd","UmbRollbackRepository","UmbUserItemRepository","UMB_PROPERTY_DATASET_CONTEXT","instance","__privateSet","__privateMethod","UMB_APP_LANGUAGE_CONTEXT","UMB_ENTITY_CONTEXT","UMB_DOCUMENT_ENTITY_TYPE","unique","data","UmbDocumentDetailRepository","itemVariants","_a","__privateGet","UmbVariantId","cultures","x","languageItems","UmbLanguageItemRepository","language","_b","html","nothing","contextCulture","tempItems","uniqueUserIds","item","userItems","user","id","_c","version","value","culture","error","entityType","actionEventContext","UMB_ACTION_EVENT_CONTEXT","reloadStructureEvent","UmbRequestReloadStructureForEntityEvent","entityUpdatedEvent","UmbEntityUpdatedEvent","event","preventCleanup","str","repeat","currentPropertyValues","currentName","diffs","nameDiff","diffWords","draftValue","draftValueString","versionValueString","diff","unsafeHTML","UmbTextStyles","css","__decorateClass","state","customElement","RbpRollbackModalElement$1"],"mappings":";;;;;;;;;;;;;;;;;;;wXAAAA,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AA6Ba,IAAAC,IAAN,cAAsCC,EAAiE;AAAA,EA0C5G,cAAc;AACN,UAAA,GA3CHC,EAAA,MAAAhB,CAAA,GAEL,KAAA,YAA+B,CAAC,GAeE,KAAA,mBAAA,MAGnB,KAAA,eAAA,IAGf,KAAA,qBAA+B,CAAC,GAGhC,KAAA,SAAmD,CAAC,GAE9BgB,EAAA,MAAAtB,GAAA,IAAIuB,EAAsB,IAAI,CAAA,GAC9BD,EAAA,MAAArB,GAAA,IAAIuB,GAAsB,IAAI,CAAA,GAEDF,EAAA,MAAApB,GAAA;AAAA,MACjD,KAAK;AAAA,MACL,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,IAAA,CACV,GAEAoB,EAAA,MAAAnB,CAAA,GACAmB,EAAA,MAAAlB,CAAA,GACAkB,EAAA,MAAAjB,CAAA,GAKO,KAAA,eAAeoB,IAA8B,CAACC,MAAa;AAC9D,MAAAC,EAAA,MAAKtB,GAAyBqB,EAAS,aAAa,EAAE,WAAW,MAAA,GACjEE,EAAA,MAAKtB,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,IAAA,CACD,GAEI,KAAA,eAAesB,IAA0B,CAACH,MAAa;AACrD,MAAAC,EAAA,MAAAvB,GAAqBsB,EAAS,cAAc,CAAA,GACjDE,EAAA,MAAKtB,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,IAAA,CACD,GAEI,KAAA,eAAeuB,IAAoB,OAAOJ,MAAa;;AACtD,UAAAA,EAAS,cAAc,MAAMK;AAC/B,cAAM,IAAI,MAAM,sBAAsBA,CAAwB,EAAE;AAG5D,YAAAC,IAASN,KAAA,gBAAAA,EAAU;AAEzB,UAAI,CAACM;AACG,cAAA,IAAI,MAAM,4BAA4B;AAGxC,YAAA,EAAE,MAAAC,MAAS,MAAM,IAAIC,EAA4B,IAAI,EAAE,gBAAgBF,CAAM;AACnF,UAAI,CAACC,EAAM;AAEX,MAAAN,EAAA,MAAKxB,GAAmB8B,CAAA;AACxB,YAAME,MAAeC,IAAAC,EAAA,MAAKlC,CAAkB,MAAvB,gBAAAiC,EAAuB,aAAY,CAAC;AAEpD,WAAA,eAAeD,EAAa,WAAW,KAAK,IAAIG,GAAaH,EAAa,CAAC,EAAE,OAAO,EAAE,YAAY,GACvGP,EAAA,MAAKtB,GAALC,CAAA,EAAA,KAAA,IAAA;AAEA,YAAMgC,IAAWJ,EAAa,IAAI,CAACK,MAAMA,EAAE,OAAO,EAAE,OAAO,CAACA,MAAMA,MAAM,IAAI,GACtE,EAAE,MAAMC,MAAkB,MAAM,IAAIC,GAA0B,IAAI,EAAE,aAAaH,CAAQ;AAE/F,MAAIE,IACF,KAAK,qBAAqBA,EAAc,IAAI,CAACE,OACpC;AAAA,QACL,MAAMA,EAAS;AAAA,QACf,OAAOA,EAAS;AAAA,QAChB,UAAUA,EAAS,WAAW,KAAK;AAAA,MACrC,EACD,IAED,KAAK,qBAAqB,CAAC,GAG7Bf,EAAA,MAAKtB,GAALE,CAAA,EAAA,KAAA,IAAA;AAAA,IAAA,CACD;AAAA,EAAA;AAAA,EAgTH,IAAI,uBAAuB;;AACzB,WACE,KAAK,SAAS,OAAK4B,IAAA,KAAK,qBAAL,gBAAAA,EAAuB,SAAQ,oBAAI,KAAK,GAAGC,EAAK,MAAAnC,CAAA,CAAoB,IACvF,UACA0C,IAAA,KAAK,qBAAL,gBAAAA,EAAuB;AAAA,EAAA;AAAA,EAIlB,SAAS;AACT,WAAAC;AAAA;AAAA;AAAA;AAAA,QAIH,KAAK,mBAAmB,SACtBA;AAAA,+CACqC,KAAK,SAAS,KAAK,kBAAkB,CAAC;AAAA,YACzEjB,EAAA,MAAKtB,MAAL,KAA2B,IAAA,CAAA;AAAA;AAAA,YAG7BwC,CAAO;AAAA,QACTlB,EAAA,MAAKtB,MAAL,KAAsB,IAAA,CAAA;AAAA,OACvBsB,EAAA,MAAKtB,MAAL,KAA0C,IAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAQlCsB,QAAKtB,GAASK,CAAA,CAAA;AAAA,cACf,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA;AAAA;AAAA;AAAA,eAInCiB,QAAKtB,GAAWI,CAAA,CAAA;AAAA,cACjB,KAAK,SAAS,KAAK,kBAAkB,CAAC;AAAA,kBAClC,CAAC,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAAA;AA+FxC;AAlfEV,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AAEAC,IAAA,oBAAA,QAAA;AAOAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AAxCKC,IAAA,oBAAA,QAAA;AA8FLC,IAAc,WAAG;AACf,QAAMwC,IAAiBV,EAAA,MAAKhC,CAA0B,KAAAgC,EAAA,MAAKjC,CAAsB,KAAA;AAC5E,OAAA,mBAAmB,KAAK,eAAe,OAAO2C;AACrD;AAEMvC,IAAgB,iBAAG;;AACnB,MAAA,GAAC4B,IAAAC,EAAK,MAAAlC,CAAA,MAAL,QAAAiC,EAAuB;AACpB,UAAA,IAAI,MAAM,4BAA4B;AAG9C,QAAM,EAAE,MAAAH,EAAA,IAAS,MAAMI,QAAKrC,CAAoB,EAAA;AAAA,KAC9C4C,IAAAP,QAAKlC,CAAkB,MAAvB,gBAAAyC,EAAuB;AAAA,IACvB,KAAK,oBAAoB;AAAA,EAC3B;AACA,MAAI,CAACX,EAAM;AAEX,QAAMe,IAA+B,CAAC,GAEhCC,IAAgB,CAAC,GAAG,IAAI,IAAIhB,KAAA,gBAAAA,EAAM,MAAM,IAAI,CAACiB,MAASA,EAAK,KAAK,GAAG,CAAC,GAEpE,EAAE,MAAMC,EAAU,IAAI,MAAMd,EAAK,MAAApC,CAAA,EAAoB,aAAagD,CAAa;AAE/E,EAAAhB,KAAA,QAAAA,EAAA,MAAM,QAAQ,CAACiB,MAAc;;AACjC,IAAIA,EAAK,yBAETF,EAAU,KAAK;AAAA,MACb,MAAME,EAAK;AAAA,MACX,QACEd,IAAAe,KAAA,gBAAAA,EAAW,KAAK,CAACC,MAASA,EAAK,WAAWF,EAAK,KAAK,QAApD,gBAAAd,EAAyD,SAAQ,KAAK,SAAS,KAAK,qBAAqB;AAAA,MAC3G,6BAA6Bc,EAAK;AAAA,MAClC,IAAIA,EAAK;AAAA,MACT,gBAAgBA,EAAK;AAAA,IAAA,CACtB;AAAA,EAAA,IAGH,KAAK,YAAYF;AACjB,QAAMK,KAAKC,IAAAN,EAAU,KAAK,CAACE,MAASA,EAAK,2BAA2B,MAAzD,gBAAAI,EAA4D;AAEvE,EAAID,KACFzB,EAAA,MAAKtB,MAAL,KAAoB,MAAA+C,CAAA;AAExB;AAEM5C,IAAc,eAAC4C,GAAY;;AACzB,QAAAE,IAAU,KAAK,UAAU,KAAK,CAACL,MAASA,EAAK,OAAOG,CAAE;AAE5D,MAAI,CAACE,GAAS;AACZ,SAAK,mBAAmB,QACxB,KAAK,SAAS,CAAC;AACf;AAAA,EAAA;AAGF,QAAM,EAAE,MAAAtB,EAAK,IAAI,MAAMI,EAAK,MAAArC,CAAA,EAAoB,mBAAmBqD,CAAE;AAErE,MAAI,CAACpB,GAAM;AACT,SAAK,mBAAmB,QACxB,KAAK,SAAS,CAAC;AACf;AAAA,EAAA;AAGF,OAAK,mBAAmB;AAAA,IACtB,MAAMsB,EAAQ;AAAA,IACd,MAAMA,EAAQ;AAAA,IACd,QAAMnB,IAAAH,EAAK,SAAS,KAAK,CAACO,MAAMA,EAAE,YAAY,KAAK,gBAAgB,MAA7D,gBAAAJ,EAAgE,SAAQH,EAAK,SAAS,CAAC,EAAE;AAAA,IAC/F,IAAIA,EAAK;AAAA,IACT,YAAYA,EAAK,OACd,OAAO,CAACO,MAAMA,EAAE,YAAY,KAAK,oBAAoB,CAACA,EAAE,OAAO,EAC/D,IAAI,CAACgB,OACG;AAAA,MACL,OAAOA,EAAM;AAAA,MACb,OAAOA,EAAM;AAAA,IACf,EACD;AAAA,EACL,GAEA,MAAM5B,QAAKtB,GAALY,CAAA,EAAA,KAAA,IAAA;AACR;AAEMR,IAAW,iBAAG;;AACd,MAAA,CAAC,KAAK,iBAAkB;AAEtB,QAAA2C,IAAK,KAAK,iBAAiB,IAC3BI,IAAU,KAAK,oBAAoB,QAEnC,EAAE,OAAAC,MAAU,MAAMrB,QAAKrC,CAAoB,EAAA,SAASqD,GAAII,CAAO;AACrE,MAAIC,EAAO;AAEL,QAAA1B,KAASI,IAAAC,QAAKlC,CAAkB,MAAvB,gBAAAiC,EAAuB,QAChCuB,KAAaf,IAAAP,QAAKlC,CAAkB,MAAvB,gBAAAyC,EAAuB;AAEtC,MAAA,CAACZ,KAAU,CAAC2B;AACR,UAAA,IAAI,MAAM,2CAA2C;AAG7D,QAAMC,IAAqB,MAAM,KAAK,WAAWC,EAAwB,GAEnEC,IAAuB,IAAIC,GAAwC,EAAE,QAAA/B,GAAQ,YAAA2B,GAAY;AAC/F,EAAAC,EAAmB,cAAcE,CAAoB;AAErD,QAAME,IAAqB,IAAIC,GAAsB,EAAE,QAAAjC,GAAQ,YAAA2B,GAAY;AAC3E,EAAAC,EAAmB,cAAcI,CAAkB,IAEnDV,IAAA,KAAK,iBAAL,QAAAA,EAAmB;AACrB;AAEA3C,IAAS,WAAG;;AACV,GAAAyB,IAAA,KAAK,iBAAL,QAAAA,EAAmB;AACrB;AAEAxB,IAAiB,SAACyC,GAAY;AAC5B,EAAAzB,EAAA,MAAKtB,MAAL,KAAoB,MAAA+C,CAAA;AACtB;AAEAxC,IAAiB,SAACqD,GAAcb,GAAYc,GAAyB;AACnE,EAAAD,EAAM,eAAe,GACrBA,EAAM,yBAAyB,GAC1B7B,EAAA,MAAArC,CAAA,EAAoB,kBAAkBqD,GAAIc,CAAc;AAEvD,QAAAZ,IAAU,KAAK,UAAU,KAAK,CAACL,MAASA,EAAK,OAAOG,CAAE;AAC5D,EAAKE,MAELA,EAAQ,iBAAiBY,GACzB,KAAK,cAAc,UAAU;AAC/B;AAEArD,IAAgB,SAACoD,GAAuB;AAChC,QAAAV,IAAQU,EAAM,OAAO;AAEtB,OAAA,mBAAmBV,EAAM,SAAS,GACvC5B,EAAA,MAAKtB,GAALE,CAAA,EAAA,KAAA,IAAA;AACF;AAEAO,IAAW,SAACqD,GAAqB;AACxB,SAAAA,EAAI,QAAQ,gBAAgB,EAAE;AACvC;AAEApD,IAAoB,WAAG;AACd,SAAA6B;AAAA;AAAA;AAAA,cAGGjB,QAAKtB,GAAgBQ,CAAA,CAAA;AAAA,eACpB,KAAK,kBAAkB;AAAA;AAEpC;AAEAG,IAAe,WAAG;AACZ,SAAC,KAAK,UAAU,SAIb4B,yCAA4C,KAAK,SAAS,KAAK,mBAAmB,CAAC;AAAA,KACzFwB;AAAA,IACC,KAAK;AAAA,IACL,CAACnB,MAASA,EAAK;AAAA,IACf,CAACA,MAAS;;AACD,aAAAL;AAAA;AAAA,gBAEC,MAAMjB,EAAA,MAAKtB,GAALM,CAAA,EAAA,KAAA,MAAuBsC,EAAK,EAAG,CAAA;AAAA,kBACnC,MAAM;AAAA,MAAG,CAAA;AAAA,gCACGd,IAAA,KAAK,qBAAL,gBAAAA,EAAuB,QAAOc,EAAK,KAAK,WAAW,EAAE;AAAA;AAAA;AAAA,oCAG/CA,EAAK,IAAI,cAAcb,EAAA,MAAKnC,CAAoB,CAAA;AAAA;AAAA,aAEvEgD,EAAK,IAAI;AAAA,aACTA,EAAK,8BAA8B,KAAK,SAAS,KAAK,kCAAkC,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA,iBAI1F,CAACgB,MAAiBtC,EAAA,MAAKtB,GAALO,CAAA,EAAA,KAAA,MAAuBqD,GAAOhB,EAAK,IAAI,CAACA,EAAK,cAAe,CAAA;AAAA,gBAC/EA,EAAK,iBACP,KAAK,SAAS,KAAK,+CAA+C,IAClE,KAAK,SAAS,KAAK,gDAAgD,CAAC;AAAA;AAAA;AAAA,IAAA;AAAA,EAG5E,CACD;AAAA,OA7BQL,sBAAyB,KAAK,SAAS,KAAK,mBAAmB,CAAC;AA+B3E;AAEM3B,IAAS,iBAAG;;AACZ,MAAA,CAAC,KAAK,iBAAkB;AAEtB,QAAAoD,KAAwBlC,IAAAC,EAAK,MAAAlC,CAAA,MAAL,gBAAAiC,EAAuB,OAAO;AAAA,IAC1D,CAACI,MAAMA,EAAE,YAAY,KAAK,oBAAoB,CAACA,EAAE;AAAA;AAGnD,MAAI,CAAC8B;AACG,UAAA,IAAI,MAAM,qCAAqC;AAGjD,QAAAC,KAAcjB,KAAAV,IAAAP,EAAK,MAAAlC,CAAA,MAAL,gBAAAyC,EAAuB,SAAS,KAAK,CAACJ,MAAMA,EAAE,YAAY,KAAK,sBAA/D,gBAAAc,EAAkF;AAEtG,MAAI,CAACiB;AACG,UAAA,IAAI,MAAM,yBAAyB;AAG3C,QAAMC,IAAkD,CAAC,GAEnDC,IAAWC,EAAUH,GAAa,KAAK,iBAAiB,IAAI;AAClE,EAAAC,EAAM,KAAK,EAAE,OAAO,QAAQ,MAAMC,GAAU,GAE5C,KAAK,iBAAiB,WAAW,QAAQ,CAACvB,MAAS;AAC3C,UAAAyB,IAAaL,EAAsB,KAAK,CAAC9B,MAAMA,EAAE,UAAUU,EAAK,KAAK;AAE3E,QAAI,CAACyB,EAAY;AAEjB,UAAMC,IAAmBhD,EAAK,MAAAtB,GAAAS,CAAA,EAAL,WAAiB,KAAK,UAAU4D,EAAW,KAAK,CAAA,GACnEE,IAAqBjD,EAAK,MAAAtB,GAAAS,CAAA,EAAL,WAAiB,KAAK,UAAUmC,EAAK,KAAK,CAAA,GAE/D4B,IAAOJ,EAAUE,GAAkBC,CAAkB;AAC3D,IAAAL,EAAM,KAAK,EAAE,OAAOtB,EAAK,OAAO,MAAA4B,GAAM;AAAA,EAAA,CACvC,GAEI,KAAA,SAAS,CAAC,GAAGN,CAAK;AACzB;AAmDArD,IAAmC,WAAG;;AAIpC,SAHQ,QAAA,IAAI,QAAQ,KAAK,gBAAgB,GACjC,QAAA,IAAI,OAAOkB,EAAA,MAAKlC,CAAgB,CAAA,GAEnC,KAAK,mBAOH0C;AAAA,uBACY,KAAK,oBAAoB;AAAA;AAAA,YAEpCkC,EAAW,KAAK,SAAS,KAAK,mBAAmB,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAMT3C,IAAAC,EAAA,MAAKlC,OAAL,gBAAAiC,EAAuB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAM7BQ,IAAAP,QAAKlC,CAAkB,MAAvB,gBAAAyC,EAAuB,MAAM,QAAQ,KAAK,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBtGC;AAAA;AAAA;AAAA;AAAA;AA4BX;AAzYWzB,EAqbK,SAAS;AAAA,EACvB4D;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsFF;AA3gBAC,EAAA;AAAA,EADCC,EAAM;AAAA,GADI/D,EAEX,WAAA,aAAA,CAAA;AAGA8D,EAAA;AAAA,EADCC,EAAM;AAAA,GAJI/D,EAKX,WAAA,oBAAA,CAAA;AAYA8D,EAAA;AAAA,EADCC,EAAM;AAAA,GAhBI/D,EAiBX,WAAA,oBAAA,CAAA;AAGA8D,EAAA;AAAA,EADCC,EAAM;AAAA,GAnBI/D,EAoBX,WAAA,gBAAA,CAAA;AAGA8D,EAAA;AAAA,EADCC,EAAM;AAAA,GAtBI/D,EAuBX,WAAA,sBAAA,CAAA;AAGA8D,EAAA;AAAA,EADCC,EAAM;AAAA,GAzBI/D,EA0BX,WAAA,UAAA,CAAA;AA1BWA,IAAN8D,EAAA;AAAA,EADNE,EAAc,mBAAmB;AAAA,GACrBhE,CAAA;AAghBb,MAAAiE,KAAejE;"}