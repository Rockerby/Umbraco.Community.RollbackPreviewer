{"version":3,"file":"rollback-previewer-modal.element-CQM-GdKg.js","sources":["../../../Client/src/umbraco/rollback/repository/rollback.server.data-source.ts","../../../Client/src/umbraco/rollback/repository/rollback.repository.ts","../../../Client/src/umbraco/rollback/modal/rollback-modal.element.ts","../../../Client/src/rollback-previewer/rollback-previewer-modal.styles.ts","../../../Client/src/rollback-previewer/rollback-previewer-iframe.element.ts","../../../Client/src/rollback-previewer/rollback-previewer-modal.element.ts"],"sourcesContent":["import type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { DocumentVersionService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the Rollback that fetches data from the server\r\n * @class UmbRollbackServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbRollbackServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbRollbackServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of versions for a document\r\n\t * @param id\r\n\t * @param culture\r\n\t * @returns {*}\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tgetVersionsByDocumentId(id: string, culture?: string) {\r\n\t\treturn tryExecuteAndNotify(this.#host, DocumentVersionService.getDocumentVersion({ documentId: id, culture }));\r\n\t}\r\n\r\n\t/**\r\n\t * Get a specific version by id\r\n\t * @param versionId\r\n\t * @returns {*}\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tgetVersionById(versionId: string) {\r\n\t\treturn tryExecuteAndNotify(this.#host, DocumentVersionService.getDocumentVersionById({ id: versionId }));\r\n\t}\r\n\r\n\tsetPreventCleanup(versionId: string, preventCleanup: boolean) {\r\n\t\treturn tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentVersionService.putDocumentVersionByIdPreventCleanup({ id: versionId, preventCleanup }),\r\n\t\t);\r\n\t}\r\n\r\n\trollback(versionId: string, culture?: string) {\r\n\t\treturn tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentVersionService.postDocumentVersionByIdRollback({ id: versionId, culture }),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbRollbackServerDataSource } from './rollback.server.data-source.js';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport class UmbRollbackRepository extends UmbControllerBase implements UmbApi {\r\n\t#dataSource: UmbRollbackServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#dataSource = new UmbRollbackServerDataSource(this);\r\n\t}\r\n\r\n\tasync requestVersionsByDocumentId(id: string, culture?: string) {\r\n\t\treturn await this.#dataSource.getVersionsByDocumentId(id, culture);\r\n\t}\r\n\r\n\tasync requestVersionById(id: string) {\r\n\t\treturn await this.#dataSource.getVersionById(id);\r\n\t}\r\n\r\n\tasync setPreventCleanup(versionId: string, preventCleanup: boolean) {\r\n\t\treturn await this.#dataSource.setPreventCleanup(versionId, preventCleanup);\r\n\t}\r\n\r\n\tasync rollback(versionId: string, culture?: string) {\r\n\t\treturn await this.#dataSource.rollback(versionId, culture);\r\n\t}\r\n}\r\n\r\nexport default UmbRollbackRepository;\r\n","/**\r\n * Developer Note:\r\n * This version of the default rollback modal as be slightly modified to support the our custom rollback previewer.\r\n * The main differences are:\r\n * - Converted a number of private properties and methods to public so they can be used in the custom rollback previewer. These are marked with a comment.\r\n * - Updated some imports to use @umbraco-cms/backoffice/document\r\n * - Improved version selector to make it more accessible (keyboard navigable & improved colour contrast)\r\n */\r\n\r\n\r\nimport { UMB_DOCUMENT_ENTITY_TYPE } from \"@umbraco-cms/backoffice/document\";\r\nimport { UmbRollbackRepository } from \"../repository/rollback.repository.js\";\r\nimport { UmbDocumentDetailRepository } from \"@umbraco-cms/backoffice/document\";\r\nimport type { UmbDocumentDetailModel } from \"@umbraco-cms/backoffice/document\";\r\nimport type { UmbRollbackModalData, UmbRollbackModalValue } from \"./types.js\";\r\nimport { diffWords, type Change } from \"@umbraco-cms/backoffice/external/diff\";\r\nimport { css, customElement, html, nothing, repeat, state, unsafeHTML } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbModalBaseElement } from \"@umbraco-cms/backoffice/modal\";\r\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\r\nimport { UmbUserItemRepository } from \"@umbraco-cms/backoffice/user\";\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from \"@umbraco-cms/backoffice/property\";\r\nimport type { UUISelectEvent } from \"@umbraco-cms/backoffice/external/uui\";\r\nimport { UMB_APP_LANGUAGE_CONTEXT, UmbLanguageItemRepository } from \"@umbraco-cms/backoffice/language\";\r\nimport { UMB_ENTITY_CONTEXT } from \"@umbraco-cms/backoffice/entity\";\r\nimport { UmbVariantId } from \"@umbraco-cms/backoffice/variant\";\r\n// import \"../../modals/shared/document-variant-language-picker.element.js\";\r\nimport { UMB_ACTION_EVENT_CONTEXT } from \"@umbraco-cms/backoffice/action\";\r\nimport { UmbEntityUpdatedEvent, UmbRequestReloadStructureForEntityEvent } from \"@umbraco-cms/backoffice/entity-action\";\r\n\r\ntype DocumentVersion = {\r\n  id: string;\r\n  date: string;\r\n  user: string;\r\n  isCurrentlyPublishedVersion: boolean;\r\n  preventCleanup: boolean;\r\n};\r\n\r\n@customElement('umb-rollback-modal')\r\nexport class UmbRollbackModalElement extends UmbModalBaseElement<UmbRollbackModalData, UmbRollbackModalValue> {\r\n  @state()\r\n  _versions: DocumentVersion[] = [];\r\n\r\n  @state()\r\n  _selectedVersion?: {\r\n    date: string;\r\n    name: string;\r\n    user: string;\r\n    id: string;\r\n    properties: {\r\n      alias: string;\r\n      value: string;\r\n    }[];\r\n  };\r\n\r\n  @state()\r\n  _selectedCulture: string | null = null;\r\n\r\n  @state()\r\n  _isInvariant = true;\r\n\r\n  @state()\r\n  _availableVariants: Option[] = [];\r\n\r\n  @state()\r\n  _diffs: Array<{ alias: string; diff: Change[] }> = [];\r\n\r\n  #rollbackRepository = new UmbRollbackRepository(this);\r\n  #userItemRepository = new UmbUserItemRepository(this);\r\n\r\n  #localizeDateOptions: Intl.DateTimeFormatOptions = {\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'long',\r\n\t\thour: 'numeric',\r\n\t\tminute: '2-digit',\r\n  };\r\n\r\n  // Change Note - Converted to public method\r\n  currentDocument: UmbDocumentDetailModel | undefined;\r\n\r\n  #currentAppCulture: string | undefined;\r\n  #currentDatasetCulture: string | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, (instance) => {\r\n\t\t\tthis.#currentDatasetCulture = instance.getVariantId().culture ?? undefined;\r\n      this.#selectCulture();\r\n    });\r\n\r\n    this.consumeContext(UMB_APP_LANGUAGE_CONTEXT, (instance) => {\r\n      this.#currentAppCulture = instance.getAppCulture();\r\n      this.#selectCulture();\r\n    });\r\n\r\n    this.consumeContext(UMB_ENTITY_CONTEXT, async (instance) => {\r\n      if (instance.getEntityType() !== UMB_DOCUMENT_ENTITY_TYPE) {\r\n        throw new Error(`Entity type is not ${UMB_DOCUMENT_ENTITY_TYPE}`);\r\n      }\r\n\r\n      const unique = instance?.getUnique();\r\n\r\n      if (!unique) {\r\n\t\t\t\tthrow new Error('Document unique is not set');\r\n      }\r\n\r\n\t\t\tconst { data } = await new UmbDocumentDetailRepository(this).requestByUnique(unique);\r\n      if (!data) return;\r\n\r\n      this.currentDocument = data;\r\n      const itemVariants = this.currentDocument?.variants ?? [];\r\n\r\n\t\t\tthis._isInvariant = itemVariants.length === 1 && new UmbVariantId(itemVariants[0].culture).isInvariant();\r\n      this.#selectCulture();\r\n\r\n\t\t\tconst cultures = itemVariants.map((x) => x.culture).filter((x) => x !== null) as string[];\r\n\t\t\tconst { data: languageItems } = await new UmbLanguageItemRepository(this).requestItems(cultures);\r\n\r\n      if (languageItems) {\r\n        this._availableVariants = languageItems.map((language) => {\r\n          return {\r\n            name: language.name,\r\n            value: language.unique,\r\n            selected: language.unique === this._selectedCulture,\r\n          };\r\n        });\r\n      } else {\r\n        this._availableVariants = [];\r\n      }\r\n\r\n      this.#requestVersions();\r\n    });\r\n  }\r\n\r\n  #selectCulture() {\r\n\t\tconst contextCulture = this.#currentDatasetCulture ?? this.#currentAppCulture ?? null;\r\n    this._selectedCulture = this._isInvariant ? null : contextCulture;\r\n  }\r\n\r\n  async #requestVersions() {\r\n    if (!this.currentDocument?.unique) {\r\n\t\t\tthrow new Error('Document unique is not set');\r\n    }\r\n\r\n    const { data } = await this.#rollbackRepository.requestVersionsByDocumentId(\r\n      this.currentDocument?.unique,\r\n\t\t\tthis._selectedCulture ?? undefined,\r\n    );\r\n    if (!data) return;\r\n\r\n    const tempItems: DocumentVersion[] = [];\r\n\r\n    const uniqueUserIds = [...new Set(data?.items.map((item) => item.user.id))];\r\n\r\n\t\tconst { data: userItems } = await this.#userItemRepository.requestItems(uniqueUserIds);\r\n\r\n    data?.items.forEach((item: any) => {\r\n      if (item.isCurrentDraftVersion) return;\r\n\r\n      tempItems.push({\r\n        date: item.versionDate,\r\n        user:\r\n\t\t\t\t\tuserItems?.find((user) => user.unique === item.user.id)?.name || this.localize.term('general_unknownUser'),\r\n        isCurrentlyPublishedVersion: item.isCurrentPublishedVersion,\r\n        id: item.id,\r\n        preventCleanup: item.preventCleanup,\r\n      });\r\n    });\r\n\r\n    this._versions = tempItems;\r\n    const id = tempItems.find((item) => item.isCurrentlyPublishedVersion)?.id;\r\n\r\n    if (id) {\r\n      this.#selectVersion(id);\r\n    }\r\n  }\r\n\r\n  async #selectVersion(id: string) {\r\n    const version = this._versions.find((item) => item.id === id);\r\n\r\n    if (!version) {\r\n      this._selectedVersion = undefined;\r\n      this._diffs = [];\r\n      return;\r\n    }\r\n\r\n    const { data } = await this.#rollbackRepository.requestVersionById(id);\r\n\r\n    if (!data) {\r\n      this._selectedVersion = undefined;\r\n      this._diffs = [];\r\n      return;\r\n    }\r\n\r\n    this._selectedVersion = {\r\n      date: version.date,\r\n      user: version.user,\r\n\t\t\tname: data.variants.find((x) => x.culture === this._selectedCulture)?.name || data.variants[0].name,\r\n      id: data.id,\r\n      properties: data.values\r\n        .filter((x) => x.culture === this._selectedCulture || !x.culture) // When invariant, culture is undefined or null.\r\n        .map((value: any) => {\r\n          return {\r\n            alias: value.alias,\r\n            value: value.value,\r\n          };\r\n        }),\r\n    };\r\n\r\n    await this.#setDiffs();\r\n  }\r\n\r\n  // Change Note - Converted to public method\r\n  async onRollback() {\r\n    if (!this._selectedVersion) return;\r\n\r\n    const id = this._selectedVersion.id;\r\n    const culture = this._selectedCulture ?? undefined;\r\n\r\n    const { error } = await this.#rollbackRepository.rollback(id, culture);\r\n    if (error) return;\r\n\r\n    const unique = this.currentDocument?.unique;\r\n    const entityType = this.currentDocument?.entityType;\r\n\r\n    if (!unique || !entityType) {\r\n\t\t\tthrow new Error('Document unique or entity type is not set');\r\n    }\r\n\r\n    const actionEventContext = await this.getContext(UMB_ACTION_EVENT_CONTEXT);\r\n\r\n\t\tconst reloadStructureEvent = new UmbRequestReloadStructureForEntityEvent({ unique, entityType });\r\n    actionEventContext.dispatchEvent(reloadStructureEvent);\r\n\r\n\t\tconst entityUpdatedEvent = new UmbEntityUpdatedEvent({ unique, entityType });\r\n    actionEventContext.dispatchEvent(entityUpdatedEvent);\r\n\r\n    this.value = {};\r\n\r\n    this.modalContext?.submit();\r\n  }\r\n\r\n  // Change Note - Converted to public method\r\n  onCancel() {\r\n    this.modalContext?.reject();\r\n  }\r\n\r\n  #onVersionClicked(id: string) {\r\n    this.#selectVersion(id);\r\n  }\r\n\r\n  #onPreventCleanup(event: Event, id: string, preventCleanup: boolean) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.#rollbackRepository.setPreventCleanup(id, preventCleanup);\r\n\r\n    const version = this._versions.find((item) => item.id === id);\r\n    if (!version) return;\r\n\r\n    version.preventCleanup = preventCleanup;\r\n\t\tthis.requestUpdate('_versions');\r\n  }\r\n\r\n  #onChangeCulture(event: UUISelectEvent) {\r\n    const value = event.target.value;\r\n\r\n    this._selectedCulture = value.toString();\r\n    this.#requestVersions();\r\n  }\r\n\r\n  #trimQuotes(str: string): string {\r\n\t\treturn str.replace(/^['\"]|['\"]$/g, '');\r\n  }\r\n\r\n  // Change Note - Converted to public method\r\n  renderCultureSelect() {\r\n    return html`\r\n      <uui-select\r\n        id=\"language-select\"\r\n        @change=${this.#onChangeCulture}\r\n\t\t\t\t.options=${this._availableVariants}></uui-select>\r\n    `;\r\n  }\r\n\r\n  // Change Note - Converted to public method\r\n  renderVersions() {\r\n    if (!this._versions.length) {\r\n\t\t\treturn html`<uui-box headline=${this.localize.term('rollback_versions')}>No versions available</uui-box>`;\r\n    }\r\n\r\n\t\treturn html` <uui-box id=\"versions-box\" headline=${this.localize.term('rollback_versions')} headlineVariant=\"h4\">\r\n      ${repeat(\r\n        this._versions,\r\n        (item) => item.id,\r\n        (item) => {\r\n          return html`\r\n            <div\r\n              class=\"rollback-item ${this._selectedVersion?.id === item.id\r\n                ? \"active\"\r\n                : \"\"}\"\r\n            >\r\n              <button\r\n                class=\"rollback-item-version-button uui-text\"\r\n                @click=${() => this.#onVersionClicked(item.id)}\r\n                @keydown=${() => {}}\r\n              >\r\n                <span class=\"rollback-item-date\">\r\n                  <umb-localize-date\r\n                    date=\"${item.date}\"\r\n                    .options=${this.#localizeDateOptions}\r\n                  ></umb-localize-date>\r\n                </span>\r\n                <span>${item.user}</span>\r\n                <span\r\n                  >${item.isCurrentlyPublishedVersion\r\n                    ? this.localize.term(\"rollback_currentPublishedVersion\")\r\n                    : \"\"}</span\r\n                >\r\n              </button>\r\n              <uui-button\r\n                look=\"secondary\"\r\n                @click=${(event: Event) =>\r\n                  this.#onPreventCleanup(event, item.id, !item.preventCleanup)}\r\n                label=${item.preventCleanup\r\n                  ? this.localize.term(\r\n                      \"contentTypeEditor_historyCleanupEnableCleanup\"\r\n                    )\r\n                  : this.localize.term(\r\n                      \"contentTypeEditor_historyCleanupPreventCleanup\"\r\n                    )}\r\n              ></uui-button>\r\n            </div>\r\n          `;\r\n        }\r\n      )}</uui-box\r\n    >`;\r\n  }\r\n\r\n  async #setDiffs() {\r\n    if (!this._selectedVersion) return;\r\n\r\n    const currentPropertyValues = this.currentDocument?.values.filter(\r\n\t\t\t(x) => x.culture === this._selectedCulture || !x.culture,\r\n    ); // When invariant, culture is undefined or null.\r\n\r\n    if (!currentPropertyValues) {\r\n\t\t\tthrow new Error('Current property values are not set');\r\n    }\r\n\r\n\t\tconst currentName = this.currentDocument?.variants.find((x) => x.culture === this._selectedCulture)?.name;\r\n\r\n    if (!currentName) {\r\n\t\t\tthrow new Error('Current name is not set');\r\n    }\r\n\r\n    const diffs: Array<{ alias: string; diff: Change[] }> = [];\r\n\r\n    const nameDiff = diffWords(currentName, this._selectedVersion.name);\r\n\t\tdiffs.push({ alias: 'name', diff: nameDiff });\r\n\r\n    this._selectedVersion.properties.forEach((item) => {\r\n\t\t\tconst draftValue = currentPropertyValues.find((x) => x.alias === item.alias);\r\n\r\n      if (!draftValue) return;\r\n\r\n\t\t\tconst draftValueString = this.#trimQuotes(JSON.stringify(draftValue.value));\r\n      const versionValueString = this.#trimQuotes(JSON.stringify(item.value));\r\n\r\n      const diff = diffWords(draftValueString, versionValueString);\r\n      diffs.push({ alias: item.alias, diff });\r\n    });\r\n\r\n    this._diffs = [...diffs];\r\n  }\r\n\r\n  // Change Note - Converted to public method\r\n  renderSelectedVersion() {\r\n    if (!this._selectedVersion)\r\n      return html`\r\n\t\t\t\t<uui-box id=\"box-right\" style=\"display: flex; align-items: center; justify-content: center;\"\r\n          >No selected version</uui-box\r\n        >\r\n      `;\r\n\r\n    return html`\r\n      <uui-box headline=${this.currentVersionHeader} id=\"box-right\">\r\n\t\t\t\t${unsafeHTML(this.localize.term('rollback_diffHelp'))}\r\n        <uui-table>\r\n          <uui-table-column style=\"width: 0\"></uui-table-column>\r\n          <uui-table-column></uui-table-column>\r\n\r\n          <uui-table-head>\r\n\t\t\t\t\t\t<uui-table-head-cell>${this.localize.term('general_alias')}</uui-table-head-cell>\r\n\t\t\t\t\t\t<uui-table-head-cell>${this.localize.term('general_value')}</uui-table-head-cell>\r\n          </uui-table-head>\r\n          ${repeat(\r\n            this._diffs,\r\n            (item) => item.alias,\r\n            (item) => {\r\n              const diff = this._diffs.find((x) => x?.alias === item.alias);\r\n              return html`\r\n                <uui-table-row>\r\n                  <uui-table-cell>${item.alias}</uui-table-cell>\r\n                  <uui-table-cell>\r\n                    ${diff\r\n                      ? diff.diff.map((part) =>\r\n                          part.added\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? html`<span class=\"diff-added\">${part.value}</span>`\r\n                            : part.removed\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? html`<span class=\"diff-removed\">${part.value}</span>`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: part.value,\r\n                        )\r\n                      : nothing}\r\n                  </uui-table-cell>\r\n                </uui-table-row>\r\n              `;\r\n\t\t\t\t\t\t},\r\n          )}\r\n        </uui-table>\r\n      </uui-box>\r\n    `;\r\n  }\r\n\r\n  get currentVersionHeader() {\r\n    return (\r\n\t\t\tthis.localize.date(this._selectedVersion?.date ?? new Date(), this.#localizeDateOptions) +\r\n\t\t\t' - ' +\r\n      this._selectedVersion?.user\r\n    );\r\n  }\r\n\r\n  override render() {\r\n    return html`\r\n      <umb-body-layout headline=\"Rollback\">\r\n        <div id=\"main\">\r\n          <div id=\"box-left\">\r\n            ${this._availableVariants.length\r\n              ? html`\r\n\t\t\t\t\t\t\t\t\t<uui-box id=\"language-box\" headline=${this.localize.term('general_language')}>\r\n                    ${this.renderCultureSelect()}\r\n                  </uui-box>\r\n                `\r\n              : nothing}\r\n            ${this.renderVersions()}\r\n          </div>\r\n          ${this.renderSelectedVersion()}\r\n        </div>\r\n        <umb-footer-layout slot=\"footer\">\r\n          <uui-button\r\n            slot=\"actions\"\r\n            look=\"secondary\"\r\n            @click=${this.onCancel}\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_cancel')}></uui-button>\r\n          <uui-button\r\n            slot=\"actions\"\r\n            look=\"primary\"\r\n            @click=${this.onRollback}\r\n\t\t\t\t\t\tlabel=${this.localize.term('actions_rollback')}\r\n\t\t\t\t\t\t?disabled=${!this._selectedVersion}></uui-button>\r\n        </umb-footer-layout>\r\n      </umb-body-layout>\r\n    `;\r\n  }\r\n\r\n  static override styles = [\r\n    UmbTextStyles,\r\n    css`\r\n      :host {\r\n        color: var(--uui-color-text);\r\n      }\r\n\r\n      #language-box {\r\n        margin-bottom: var(--uui-size-space-2);\r\n      }\r\n\r\n      #language-select {\r\n        width: 100%;\r\n      }\r\n\r\n      uui-table {\r\n\t\t\t\t--uui-table-cell-padding: var(--uui-size-space-1) var(--uui-size-space-4);\r\n        margin-top: var(--uui-size-space-5);\r\n      }\r\n      uui-table-head-cell:first-child {\r\n        border-top-left-radius: var(--uui-border-radius);\r\n      }\r\n      uui-table-head-cell:last-child {\r\n        border-top-right-radius: var(--uui-border-radius);\r\n      }\r\n      uui-table-head-cell {\r\n        background-color: var(--uui-color-surface-alt);\r\n      }\r\n      uui-table-head-cell:last-child,\r\n      uui-table-cell:last-child {\r\n        border-right: 1px solid var(--uui-color-border);\r\n      }\r\n      uui-table-head-cell,\r\n      uui-table-cell {\r\n        border-top: 1px solid var(--uui-color-border);\r\n        border-left: 1px solid var(--uui-color-border);\r\n      }\r\n      uui-table-row:last-child uui-table-cell {\r\n        border-bottom: 1px solid var(--uui-color-border);\r\n      }\r\n      uui-table-row:last-child uui-table-cell:last-child {\r\n        border-bottom-right-radius: var(--uui-border-radius);\r\n      }\r\n      uui-table-row:last-child uui-table-cell:first-child {\r\n        border-bottom-left-radius: var(--uui-border-radius);\r\n      }\r\n\r\n      .diff-added,\r\n      ins {\r\n        background-color: #00c43e63;\r\n      }\r\n      .diff-removed,\r\n      del {\r\n        background-color: #ff35356a;\r\n      }\r\n      .rollback-item {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: var(--uui-size-space-5);\r\n      }\r\n      .rollback-item::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        inset: 2px;\r\n        display: block;\r\n        border: 2px solid transparent;\r\n        pointer-events: none;\r\n      }\r\n      .rollback-item.active::after,\r\n      .rollback-item:has(:hover)::after,\r\n      .rollback-item:has(:focus-visible)::after {\r\n        border-color: var(--uui-color-selected);\r\n      }\r\n      .rollback-item:not(.active):has(:hover)::after,\r\n      .rollback-item:not(.active):has(:focus-visible)::after {\r\n        opacity: 0.5;\r\n      }\r\n      .rollback-item span {\r\n        display: block;\r\n        margin: 0;\r\n      }\r\n\r\n      .rollback-item .rollback-item-date {\r\n        margin-bottom: 0.1em;\r\n        font-size: 1.1rem;\r\n        font-weight: 600;\r\n      }\r\n\r\n      .rollback-item-version-button {\r\n        border: none;\r\n        padding: 0;\r\n        text-align: left;\r\n        background-color: transparent;\r\n\r\n        &:focus-visible {\r\n          outline: none; // Visual focus state handled via parent .rollback-item\r\n        }\r\n\r\n        &::after {\r\n          content: \"\";\r\n          position: absolute;\r\n          inset: 0;\r\n          display: block;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .rollback-item uui-button {\r\n        white-space: nowrap;\r\n      }\r\n\r\n      #main {\r\n        display: flex;\r\n        gap: var(--uui-size-space-5);\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n\r\n      #versions-box {\r\n        --uui-box-default-padding: 0;\r\n      }\r\n\r\n      #box-left {\r\n        max-width: 500px;\r\n        flex: 1;\r\n        overflow: auto;\r\n        height: 100%;\r\n      }\r\n\r\n      #box-right {\r\n        flex: 1;\r\n        overflow: auto;\r\n        height: 100%;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\nexport default UmbRollbackModalElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n\t\t'umb-rollback-modal': UmbRollbackModalElement;\r\n  }\r\n}\r\n","import { css } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbRollbackModalElement } from \"../umbraco/rollback/modal/rollback-modal.element\";\r\n\r\nexport const rpRollbackStyles = [\r\n  ...UmbRollbackModalElement.styles, // Importing the base styles from UmbRollbackModalElement\r\n  css`\r\n    .preview-view {\r\n      #main {\r\n        display: grid;\r\n        place-content: start;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--uui-size-space-5);\r\n        height: 100%;\r\n        container-type: inline-size;\r\n      }\r\n\r\n      #box-left {\r\n        max-height: 300px;\r\n        max-width: 100%;\r\n      }\r\n\r\n      #box-right {\r\n        width: 100cqw;\r\n      }\r\n    }\r\n\r\n    .rp-wrapper {\r\n      display: grid;\r\n      grid-template: \"current selected\" / 1fr 1fr;\r\n      gap: var(--uui-size-space-5);\r\n    }\r\n\r\n    .rp-container {\r\n      display: grid;\r\n      grid-template-columns: 1fr;\r\n      grid-template-rows: 1fr auto;\r\n      overflow: hidden;\r\n      container-type: inline-size;\r\n\r\n      .uui-h4 {\r\n        margin: 0;\r\n      }\r\n\r\n      .uui-text {\r\n        margin-top: 0.3rem;\r\n      }\r\n\r\n      &.current {\r\n        grid-area: current;\r\n      }\r\n\r\n      &.selected {\r\n        grid-area: selected;\r\n      }\r\n    }\r\n  `,\r\n];\r\n","import {\r\n  css,\r\n  customElement,\r\n  html,\r\n  LitElement,\r\n  property,\r\n  state,\r\n  query\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\nexport interface RollbackPreviewDevice {\r\n  alias: string;\r\n  label: string;\r\n  demensions: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n}\r\n\r\nconst device: RollbackPreviewDevice = {\r\n  alias: \"desktop\",\r\n  label: \"Desktop\",\r\n  demensions: {\r\n    width: 1920,\r\n    height: 1080,\r\n  },\r\n};\r\n\r\n@customElement(\"rp-iframe\")\r\nexport class RpIframe extends LitElement {\r\n  @property({ type: String })\r\n  public src = \"\";\r\n\r\n  @state()\r\n  _device: RollbackPreviewDevice = device;\r\n\r\n  @query(\"iframe\")\r\n  iframe: HTMLIFrameElement | null | undefined;\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n\r\n    if (!this.src) {\r\n      console.error(\"No src provided for rollback previewer iframe\");\r\n    }\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      this.updateIframeDevice();\r\n    });\r\n    resizeObserver.observe(this);\r\n  }\r\n\r\n  updateIframeDevice() {\r\n    let scale = this.clientWidth / this._device.demensions.width;\r\n\r\n    if (scale > 1) {\r\n      scale = 1;\r\n    }\r\n\r\n    this.style.setProperty(\"--rp-device-width\", `${this._device.demensions.width}px`);\r\n    this.style.setProperty(\"--rp-device-height\", `${this._device.demensions.height}px`);\r\n    this.style.setProperty(\"--rp-iframe-scale\", `${scale}`);\r\n    this.style.setProperty(\"--rp-height\", `${this._device.demensions.height * scale}px`);\r\n  }\r\n\r\n  resetScrollPosition() {\r\n    this.setScrollPosition(0, 0);\r\n  }\r\n\r\n  setScrollPosition(positionY: number = 0, positionX: number = 0) {\r\n    this.iframe?.contentWindow?.scrollTo({\r\n      top: positionY,\r\n      left: positionX,\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  // This is a LitElement specific method that is called when the element is first rendered\r\n  firstUpdated(): void {\r\n    this.updateIframeDevice();\r\n  }\r\n\r\n  override render() {\r\n    if (!this.src) {\r\n      return null;\r\n    }\r\n\r\n    // TODO: Add configurable title attribute for the iframe\r\n    return html`\r\n      <div id=\"wrapper\">\r\n          <iframe src=${this.src}></iframe>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static override styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n        height: var(--rp-height, auto);\r\n        width: 100cqw;\r\n      }\r\n\r\n      #wrapper {\r\n        width: var(--rp-device-width, 100%);\r\n        height: var(--rp-device-height, 600px);\r\n        transform: scale(var(--rp-iframe-scale, 1));\r\n        transform-origin: 0 0;\r\n        overflow: hidden;\r\n        position: relative;\r\n      }\r\n\r\n      iframe {\r\n        border: none;\r\n        inset: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: hidden;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"rp-iframe\": RpIframe;\r\n  }\r\n}\r\n\r\nexport { RpIframe as default };\r\n","import {\r\n  customElement,\r\n  html,\r\n  nothing,\r\n  query,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport UmbRollbackModalElement from \"../umbraco/rollback/modal/rollback-modal.element.js\";\r\nimport { UMB_APP_CONTEXT } from \"@umbraco-cms/backoffice/app\";\r\n\r\nimport { rpRollbackStyles } from \"./rollback-previewer-modal.styles.js\";\r\nimport \"./rollback-previewer-iframe.element.js\";\r\nimport RpIframe from \"./rollback-previewer-iframe.element.js\";\r\n\r\n@customElement(\"rp-rollback-modal\")\r\nexport class RpRollbackModalElement extends UmbRollbackModalElement {\r\n  #useJsonView: boolean = false;\r\n  #serverUrl: string = \"\";\r\n\r\n  @query(\"#rollbackPreviewerLeft\")\r\n  rollbackPreviewerLeft: RpIframe | null | undefined;\r\n\r\n  @query(\"#rollbackPreviewerRight\")\r\n  rollbackPreviewerRight: RpIframe | null | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#init();\r\n  }\r\n\r\n  async #init() {\r\n    const appContext = await this.getContext(UMB_APP_CONTEXT);\r\n    this.#serverUrl = appContext.getServerUrl();\r\n  }\r\n\r\n  async #switchView() {\r\n    this.#useJsonView = !this.#useJsonView;\r\n    this.requestUpdate();\r\n\r\n    if (!this.#useJsonView) {\r\n      await this.updateComplete;\r\n      setTimeout(() => {\r\n        this.#setupScrollSync();\r\n    }, 300);\r\n    }\r\n  }\r\n\r\n  #setupScrollSync() {\r\n    if (!this.rollbackPreviewerLeft || !this.rollbackPreviewerRight) return;\r\n\r\n    const iframes = [this.rollbackPreviewerLeft, this.rollbackPreviewerRight];\r\n\r\n    iframes.forEach((iframe) => {\r\n      if (iframe === null) return;\r\n\r\n      iframe.onload = () => {\r\n        iframe.resetScrollPosition();\r\n      };\r\n    });\r\n\r\n    const handleScroll = (e: Event) => {\r\n      const scrolledWindow = e.currentTarget as Window;\r\n      const scrolledIframe = scrolledWindow?.frameElement as HTMLIFrameElement;\r\n      const otherIframes = iframes.filter(\r\n        (item) => item.iframe !== scrolledIframe\r\n      ).map(item => item.iframe);\r\n\r\n      if (!scrolledIframe) return;\r\n\r\n      otherIframes.forEach((otherIframe) => {\r\n        if (!otherIframe) return;\r\n        otherIframe.contentWindow?.removeEventListener(\r\n          \"scroll\",\r\n          handleScroll\r\n        );\r\n\r\n        this.#syncScroll(scrolledIframe, otherIframe);\r\n\r\n        window.requestAnimationFrame(() => {\r\n          otherIframe?.contentWindow?.addEventListener(\r\n            \"scroll\",\r\n            handleScroll\r\n          );\r\n        });\r\n      });\r\n    };\r\n\r\n    iframes.forEach((iframe) => {\r\n      iframe.iframe?.contentWindow?.addEventListener(\"scroll\", handleScroll);\r\n    });\r\n  }\r\n\r\n  #syncScroll(\r\n    scrolledIframe: HTMLIFrameElement,\r\n    targetIframe: HTMLIFrameElement\r\n  ) {\r\n    if (!scrolledIframe || !targetIframe) return;\r\n\r\n    try {\r\n      const scrolledDoc =\r\n        scrolledIframe.contentDocument ||\r\n        scrolledIframe.contentWindow?.document;\r\n      const targetDoc =\r\n        targetIframe.contentDocument ||\r\n        targetIframe.contentWindow?.document;\r\n\r\n      if (!scrolledDoc || !targetDoc) return;\r\n\r\n      // Calculate vertical scroll percentage\r\n      const scrolledEle = scrolledDoc.documentElement || scrolledDoc.body;\r\n      const targetEle = targetDoc.documentElement || targetDoc.body;\r\n\r\n      const maxScrollTop = scrolledEle.scrollHeight - scrolledEle.clientHeight;\r\n      const scrolledPercent =\r\n        maxScrollTop > 0 ? scrolledEle.scrollTop / maxScrollTop : 0;\r\n\r\n      const targetMaxScrollTop =\r\n        targetEle.scrollHeight - targetEle.clientHeight;\r\n      const targetTop = scrolledPercent * targetMaxScrollTop;\r\n\r\n      // Calculate horizontal scroll percentage if needed\r\n      const maxScrollLeft = scrolledEle.scrollWidth - scrolledEle.clientWidth;\r\n      const scrolledWidthPercent =\r\n        maxScrollLeft > 0 ? scrolledEle.scrollLeft / maxScrollLeft : 0;\r\n\r\n      const targetMaxScrollLeft = targetEle.scrollWidth - targetEle.clientWidth;\r\n      const targetLeft = scrolledWidthPercent * targetMaxScrollLeft;\r\n\r\n      // Apply scroll to target iframe\r\n      targetIframe.contentWindow?.scrollTo({\r\n        top: targetTop,\r\n        left: targetLeft,\r\n        behavior: \"instant\",\r\n      });\r\n    } catch (e) {\r\n      console.error(\"Error syncing scroll:\", e);\r\n    }\r\n  }\r\n\r\n  // This is a LitElement specific method that is called when the element is first rendered\r\n  updated(): void {\r\n    // This is a hack for now to wait for the iframe to load before setting up the scroll sync\r\n    setTimeout(() => {\r\n      this.#setupScrollSync();\r\n    }, 300);\r\n  }\r\n\r\n  renderSelectedVersionVisualPreview() {\r\n    if (!this._selectedVersion)\r\n      return html`\r\n        <uui-box\r\n          style=\"display: flex; align-items: center; justify-content: center;\"\r\n          >No selected version</uui-box\r\n        >\r\n      `;\r\n\r\n    return html`\r\n      <uui-box id=\"box-right\">\r\n        <div class=\"rp-wrapper\">\r\n          <div class=\"rp-container current\">\r\n            <div>\r\n              <h4 class=\"uui-h4\">Current version</h4>\r\n            </div>\r\n            <rp-iframe\r\n              id=\"rollbackPreviewerLeft\"\r\n              src=\"${this.#serverUrl}/${this.currentDocument\r\n                ?.unique}?culture=${this._selectedCulture}\"\r\n            >\r\n            </rp-iframe>\r\n          </div>\r\n          <div class=\"rp-container selected\">\r\n            <div>\r\n              <h4 class=\"uui-h4\">Selected version</h4>\r\n              <p class=\"uui-text\">${this.currentVersionHeader}</p>\r\n            </div>\r\n            <rp-iframe\r\n              id=\"rollbackPreviewerRight\"\r\n              src=\"${this.#serverUrl}?cid=${this.currentDocument\r\n                ?.unique}&vid=${this._selectedVersion.id}&culture=${this\r\n                ._selectedCulture}\"\r\n            ></rp-iframe>\r\n          </div>\r\n        </div>\r\n      </uui-box>\r\n    `;\r\n  }\r\n\r\n  override render() {\r\n    return html`\r\n      <umb-body-layout\r\n        headline=\"Visual Rollback Preview\"\r\n        class=${this.#useJsonView ? \"json-view\" : \"preview-view\"}\r\n      >\r\n        <uui-button\r\n          slot=\"action-menu\"\r\n          look=\"secondary\"\r\n          @click=${this.#switchView}\r\n          style=\"margin-right:24px\"\r\n          label=${this.#useJsonView ? \"Visual difference\" : \"JSON difference\"}\r\n        >\r\n          <uui-icon name=\"icon-repeat\" style=\"margin-right:4px\"></uui-icon>\r\n          ${this.#useJsonView\r\n            ? \"Visual difference\"\r\n            : \"JSON difference\"}</uui-button\r\n        >\r\n\r\n        <div id=\"main\">\r\n          <div id=\"box-left\">\r\n            ${this._availableVariants.length\r\n              ? html`\r\n                  <uui-box\r\n                    id=\"language-box\"\r\n                    headline=${this.localize.term(\"general_language\")}\r\n                  >\r\n                    ${this.renderCultureSelect()}\r\n                  </uui-box>\r\n                `\r\n              : nothing}\r\n            ${this.renderVersions()}\r\n          </div>\r\n          <div id=\"box-right\">\r\n            ${this.#useJsonView\r\n              ? html` ${this.renderSelectedVersion()} `\r\n              : html` ${this.renderSelectedVersionVisualPreview()} `}\r\n          </div>\r\n        </div>\r\n        <umb-footer-layout slot=\"footer\">\r\n          <uui-button\r\n            slot=\"actions\"\r\n            look=\"secondary\"\r\n            @click=${this.onCancel}\r\n            label=${this.localize.term(\"general_cancel\")}\r\n          ></uui-button>\r\n          <uui-button\r\n            slot=\"actions\"\r\n            look=\"primary\"\r\n            @click=${this.onRollback}\r\n            label=${this.localize.term(\"actions_rollback\")}\r\n            ?disabled=${!this._selectedVersion}\r\n          ></uui-button>\r\n        </umb-footer-layout>\r\n      </umb-body-layout>\r\n    `;\r\n  }\r\n\r\n  static override styles = rpRollbackStyles;\r\n}\r\n\r\nexport default RpRollbackModalElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"rp-rollback-modal\": RpRollbackModalElement;\r\n  }\r\n}\r\n"],"names":["UmbRollbackServerDataSource","host","__privateAdd","_host","__privateSet","id","culture","tryExecuteAndNotify","__privateGet","DocumentVersionService","versionId","preventCleanup","UmbRollbackRepository","UmbControllerBase","_dataSource","_rollbackRepository","_userItemRepository","_localizeDateOptions","_currentAppCulture","_currentDatasetCulture","_UmbRollbackModalElement_instances","selectCulture_fn","requestVersions_fn","selectVersion_fn","onVersionClicked_fn","onPreventCleanup_fn","onChangeCulture_fn","trimQuotes_fn","setDiffs_fn","UmbRollbackModalElement","UmbModalBaseElement","UmbUserItemRepository","UMB_PROPERTY_DATASET_CONTEXT","instance","__privateMethod","UMB_APP_LANGUAGE_CONTEXT","UMB_ENTITY_CONTEXT","UMB_DOCUMENT_ENTITY_TYPE","unique","data","UmbDocumentDetailRepository","itemVariants","_a","UmbVariantId","cultures","x","languageItems","UmbLanguageItemRepository","language","error","entityType","_b","actionEventContext","UMB_ACTION_EVENT_CONTEXT","reloadStructureEvent","UmbRequestReloadStructureForEntityEvent","entityUpdatedEvent","UmbEntityUpdatedEvent","_c","html","repeat","item","event","unsafeHTML","diff","part","nothing","contextCulture","tempItems","uniqueUserIds","userItems","user","version","value","str","currentPropertyValues","currentName","diffs","nameDiff","diffWords","draftValue","draftValueString","versionValueString","UmbTextStyles","css","__decorateClass","state","customElement","rpRollbackStyles","device","RpIframe","LitElement","scale","positionY","positionX","property","query","_useJsonView","_serverUrl","_RpRollbackModalElement_instances","init_fn","switchView_fn","setupScrollSync_fn","syncScroll_fn","RpRollbackModalElement","appContext","UMB_APP_CONTEXT","iframes","iframe","handleScroll","e","scrolledWindow","scrolledIframe","otherIframes","otherIframe","targetIframe","scrolledDoc","targetDoc","scrolledEle","targetEle","maxScrollTop","scrolledPercent","targetMaxScrollTop","targetTop","maxScrollLeft","scrolledWidthPercent","targetMaxScrollLeft","targetLeft","RpRollbackModalElement$1"],"mappings":"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"}