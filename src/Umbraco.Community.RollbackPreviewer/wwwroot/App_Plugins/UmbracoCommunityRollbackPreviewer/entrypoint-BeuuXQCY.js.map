{"version":3,"file":"entrypoint-BeuuXQCY.js","sources":["../../../Client/src/entrypoints/entrypoint.ts"],"sourcesContent":["import { UmbEntryPointOnInit, UmbEntryPointOnUnload } from '@umbraco-cms/backoffice/extension-api';\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\nimport { client } from '../api';\n\n// load up the manifests here\nexport const onInit: UmbEntryPointOnInit = (_host, _extensionRegistry) => {\n\n  console.log('Hello from my extension ðŸŽ‰');\n  // Will use only to add in Open API config with generated TS OpenAPI HTTPS Client\n  // Do the OAuth token handshake stuff\n  _host.consumeContext(UMB_AUTH_CONTEXT, async (authContext) => {\n\n    // Get the token info from Umbraco\n    const config = authContext.getOpenApiConfiguration();\n\n    client.setConfig({\n      baseUrl: config.base,\n      credentials: config.credentials\n    });\n\n    // For every request being made, add the token to the headers\n    // Can't use the setConfig approach above as its set only once and\n    // tokens expire and get refreshed\n    client.interceptors.request.use(async (request, _options) => {\n      const token = await config.token();\n      request.headers.set('Authorization', `Bearer ${token}`);\n      return request;\n    });\n  });\n};\n\nexport const onUnload: UmbEntryPointOnUnload = (_host, _extensionRegistry) => {\n  console.log('Goodbye from my extension ðŸ‘‹');\n};\n"],"names":["onInit","_host","_extensionRegistry","UMB_AUTH_CONTEXT","authContext","config","client","request","_options","token","onUnload"],"mappings":";;AAKa,MAAAA,IAA8B,CAACC,GAAOC,MAAuB;AAExE,UAAQ,IAAI,4BAA4B,GAGlCD,EAAA,eAAeE,GAAkB,OAAOC,MAAgB;AAGtD,UAAAC,IAASD,EAAY,wBAAwB;AAEnD,IAAAE,EAAO,UAAU;AAAA,MACf,SAASD,EAAO;AAAA,MAChB,aAAaA,EAAO;AAAA,IAAA,CACrB,GAKDC,EAAO,aAAa,QAAQ,IAAI,OAAOC,GAASC,MAAa;AACrD,YAAAC,IAAQ,MAAMJ,EAAO,MAAM;AACjC,aAAAE,EAAQ,QAAQ,IAAI,iBAAiB,UAAUE,CAAK,EAAE,GAC/CF;AAAA,IAAA,CACR;AAAA,EAAA,CACF;AACH,GAEaG,IAAkC,CAACT,GAAOC,MAAuB;AAC5E,UAAQ,IAAI,8BAA8B;AAC5C;"}