{"version":3,"file":"rollback.repository-BeMPFVxp.js","sources":["../../../Client/src/repository/rollback.server.data-source.ts","../../../Client/src/repository/rollback.repository.ts"],"sourcesContent":["import type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { DocumentVersionService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the Rollback that fetches data from the server\r\n * @class UmbRollbackServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbRollbackServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbRollbackServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of versions for a document\r\n\t * @param id\r\n\t * @param culture\r\n\t * @returns {*}\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tgetVersionsByDocumentId(id: string, culture?: string) {\r\n\t\treturn tryExecuteAndNotify(this.#host, DocumentVersionService.getDocumentVersion({ documentId: id, culture }));\r\n\t}\r\n\r\n\t/**\r\n\t * Get a specific version by id\r\n\t * @param versionId\r\n\t * @returns {*}\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tgetVersionById(versionId: string) {\r\n\t\treturn tryExecuteAndNotify(this.#host, DocumentVersionService.getDocumentVersionById({ id: versionId }));\r\n\t}\r\n\r\n\tsetPreventCleanup(versionId: string, preventCleanup: boolean) {\r\n\t\treturn tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentVersionService.putDocumentVersionByIdPreventCleanup({ id: versionId, preventCleanup }),\r\n\t\t);\r\n\t}\r\n\r\n\trollback(versionId: string, culture?: string) {\r\n\t\treturn tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentVersionService.postDocumentVersionByIdRollback({ id: versionId, culture }),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbRollbackServerDataSource } from './rollback.server.data-source.js';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport class UmbRollbackRepository extends UmbControllerBase implements UmbApi {\r\n\t#dataSource: UmbRollbackServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#dataSource = new UmbRollbackServerDataSource(this);\r\n\t}\r\n\r\n\tasync requestVersionsByDocumentId(id: string, culture?: string) {\r\n\t\treturn await this.#dataSource.getVersionsByDocumentId(id, culture);\r\n\t}\r\n\r\n\tasync requestVersionById(id: string) {\r\n\t\treturn await this.#dataSource.getVersionById(id);\r\n\t}\r\n\r\n\tasync setPreventCleanup(versionId: string, preventCleanup: boolean) {\r\n\t\treturn await this.#dataSource.setPreventCleanup(versionId, preventCleanup);\r\n\t}\r\n\r\n\tasync rollback(versionId: string, culture?: string) {\r\n\t\treturn await this.#dataSource.rollback(versionId, culture);\r\n\t}\r\n}\r\n\r\nexport default UmbRollbackRepository;\r\n"],"names":["UmbRollbackServerDataSource","host","__privateAdd","_host","__privateSet","id","culture","tryExecuteAndNotify","__privateGet","DocumentVersionService","versionId","preventCleanup","UmbRollbackRepository","UmbControllerBase","_dataSource"],"mappings":";;;;;;;;;AASO,MAAMA,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQxC,YAAYC,GAAyB;AAPrC,IAAAC,EAAA,MAAAC;AAQC,IAAAC,EAAA,MAAKD,GAAQF;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUd,wBAAwBI,GAAYC,GAAkB;AAC9C,WAAAC,EAAoBC,EAAA,MAAKL,IAAOM,EAAuB,mBAAmB,EAAE,YAAYJ,GAAI,SAAAC,EAAQ,CAAC,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS9G,eAAeI,GAAmB;AAC1B,WAAAH,EAAoBC,EAAA,MAAKL,IAAOM,EAAuB,uBAAuB,EAAE,IAAIC,EAAU,CAAC,CAAC;AAAA,EAAA;AAAA,EAGxG,kBAAkBA,GAAmBC,GAAyB;AACtD,WAAAJ;AAAA,MACNC,EAAA,MAAKL;AAAA,MACLM,EAAuB,qCAAqC,EAAE,IAAIC,GAAW,gBAAAC,EAAgB,CAAA;AAAA,IAC9F;AAAA,EAAA;AAAA,EAGD,SAASD,GAAmBJ,GAAkB;AACtC,WAAAC;AAAA,MACNC,EAAA,MAAKL;AAAA,MACLM,EAAuB,gCAAgC,EAAE,IAAIC,GAAW,SAAAJ,EAAS,CAAA;AAAA,IAClF;AAAA,EAAA;AAEF;AA7CCH,IAAA;;ACLM,MAAMS,UAA8BC,EAAoC;AAAA,EAG9E,YAAYZ,GAAyB;AACpC,UAAMA,CAAI;AAHX,IAAAC,EAAA,MAAAY;AAKM,IAAAV,EAAA,MAAAU,GAAc,IAAId,EAA4B,IAAI;AAAA,EAAA;AAAA,EAGxD,MAAM,4BAA4BK,GAAYC,GAAkB;AAC/D,WAAO,MAAME,EAAA,MAAKM,GAAY,wBAAwBT,GAAIC,CAAO;AAAA,EAAA;AAAA,EAGlE,MAAM,mBAAmBD,GAAY;AACpC,WAAO,MAAMG,EAAA,MAAKM,GAAY,eAAeT,CAAE;AAAA,EAAA;AAAA,EAGhD,MAAM,kBAAkBK,GAAmBC,GAAyB;AACnE,WAAO,MAAMH,EAAA,MAAKM,GAAY,kBAAkBJ,GAAWC,CAAc;AAAA,EAAA;AAAA,EAG1E,MAAM,SAASD,GAAmBJ,GAAkB;AACnD,WAAO,MAAME,EAAA,MAAKM,GAAY,SAASJ,GAAWJ,CAAO;AAAA,EAAA;AAE3D;AAvBCQ,IAAA;"}